/*
 * QEMU ARC EXTRA MAPPING
 *
 * Copyright (c) 2020 Synopsys Inc.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, see
 * http://www.gnu.org/licenses/lgpl-2.1.html
 */

SEMANTIC_FUNCTION(ENTER, 0)
SEMANTIC_FUNCTION(LEAVE, 0)
MAPPING(enter_s, ENTER, 0)
MAPPING(leave_s, LEAVE, 0)

SEMANTIC_FUNCTION(SR, 2)
SEMANTIC_FUNCTION(SRL, 2)
SEMANTIC_FUNCTION(SYNC, 0)
MAPPING(sr, SR, 2, 1, 0)
MAPPING(srl, SRL, 2, 1, 0)
MAPPING(sync, SYNC, 0)

SEMANTIC_FUNCTION(TRAP, 1)
SEMANTIC_FUNCTION(RTIE, 0)
SEMANTIC_FUNCTION(SLEEP, 1)
MAPPING(trap_s, TRAP, 1, 0)
MAPPING(rtie, RTIE, 0)
MAPPING(sleep, SLEEP, 1, 0)

SEMANTIC_FUNCTION(SWI, 1)
CONSTANT(SWI, swi, 0, 0)
MAPPING(swi, SWI, 1, 0)
CONSTANT(SWI, swi_s, 0, 0)
MAPPING(swi_s, SWI, 1, 0)

#ifdef TARGET_ARCV2
SEMANTIC_FUNCTION(VADD2, 3)
SEMANTIC_FUNCTION(VADD2H, 3)
SEMANTIC_FUNCTION(VADD4H, 3)
SEMANTIC_FUNCTION(VSUB2, 3)
SEMANTIC_FUNCTION(VSUB2H, 3)
SEMANTIC_FUNCTION(VSUB4H, 3)
SEMANTIC_FUNCTION(MPYD, 3)
SEMANTIC_FUNCTION(MPYDU, 3)


MAPPING(vadd2, VADD2, 3, 0, 1, 2)
MAPPING(vadd2h, VADD2H, 3, 0, 1, 2)
MAPPING(vadd4h, VADD4H, 3, 0, 1, 2)
MAPPING(vsub2, VSUB2, 3, 0, 1, 2)
MAPPING(vsub2h, VSUB2H, 3, 0, 1, 2)
MAPPING(vsub4h, VSUB4H, 3, 0, 1, 2)
MAPPING(mpyd, MPYD, 3, 0, 1, 2)
MAPPING(mpydu, MPYDU, 3, 0, 1, 2)
#endif

#ifdef TARGET_ARCV3
SEMANTIC_FUNCTION(MPYL, 3)
SEMANTIC_FUNCTION(MPYML, 3)
SEMANTIC_FUNCTION(MPYMUL, 3)
SEMANTIC_FUNCTION(MPYMSUL, 3)
SEMANTIC_FUNCTION(ADDHL, 3)

MAPPING(mpyl, MPYL, 3, 0, 1, 2)
MAPPING(mpyml, MPYML, 3, 0, 1, 2)
MAPPING(mpymul, MPYMUL, 3, 0, 1, 2)
MAPPING(mpymsul, MPYMSUL, 3, 0, 1, 2)
MAPPING(addhl, ADDHL, 3, 0, 1, 2)
#endif
